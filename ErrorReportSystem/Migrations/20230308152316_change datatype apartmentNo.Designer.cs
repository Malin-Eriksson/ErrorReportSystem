// <auto-generated />
using ErrorReportSystem.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ErrorReportSystem.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230308152316_change datatype apartmentNo")]
    partial class changedatatypeapartmentNo
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ErrorReportSystem.MVVM.Models.Entities.CommentEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FaultReportId")
                        .HasColumnType("int");

                    b.Property<byte[]>("TimeStamp")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.HasIndex("FaultReportId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("ErrorReportSystem.MVVM.Models.Entities.FaultReportEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FaultDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ResidentId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<byte[]>("TimeStamp")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.HasIndex("ResidentId");

                    b.HasIndex("StatusId");

                    b.ToTable("FaultReports");
                });

            modelBuilder.Entity("ErrorReportSystem.MVVM.Models.Entities.ResidentEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("char(13)");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("UnitId");

                    b.ToTable("Residents");
                });

            modelBuilder.Entity("ErrorReportSystem.MVVM.Models.Entities.StatusEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("StatusDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("ErrorReportSystem.MVVM.Models.Entities.UnitEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApartmentNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("char(6)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StreetNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("ErrorReportSystem.MVVM.Models.Entities.CommentEntity", b =>
                {
                    b.HasOne("ErrorReportSystem.MVVM.Models.Entities.FaultReportEntity", "FaultReport")
                        .WithMany("Comments")
                        .HasForeignKey("FaultReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FaultReport");
                });

            modelBuilder.Entity("ErrorReportSystem.MVVM.Models.Entities.FaultReportEntity", b =>
                {
                    b.HasOne("ErrorReportSystem.MVVM.Models.Entities.ResidentEntity", "Resident")
                        .WithMany("FaultReports")
                        .HasForeignKey("ResidentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ErrorReportSystem.MVVM.Models.Entities.StatusEntity", "Status")
                        .WithMany("FaultReports")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resident");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("ErrorReportSystem.MVVM.Models.Entities.ResidentEntity", b =>
                {
                    b.HasOne("ErrorReportSystem.MVVM.Models.Entities.UnitEntity", "Unit")
                        .WithMany("Residents")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("ErrorReportSystem.MVVM.Models.Entities.FaultReportEntity", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("ErrorReportSystem.MVVM.Models.Entities.ResidentEntity", b =>
                {
                    b.Navigation("FaultReports");
                });

            modelBuilder.Entity("ErrorReportSystem.MVVM.Models.Entities.StatusEntity", b =>
                {
                    b.Navigation("FaultReports");
                });

            modelBuilder.Entity("ErrorReportSystem.MVVM.Models.Entities.UnitEntity", b =>
                {
                    b.Navigation("Residents");
                });
#pragma warning restore 612, 618
        }
    }
}
